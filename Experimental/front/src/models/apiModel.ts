/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.6.1.0 (NJsonSchema v10.1.21.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming



export class AddBookDto implements IAddBookDto {
    bookName?: string | undefined;
    authorFirstName?: string | undefined;
    authroLastName?: string | undefined;

    constructor(data?: IAddBookDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.bookName = _data["bookName"];
            this.authorFirstName = _data["authorFirstName"];
            this.authroLastName = _data["authroLastName"];
        }
    }

    static fromJS(data: any): AddBookDto {
        data = typeof data === 'object' ? data : {};
        let result = new AddBookDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["bookName"] = this.bookName;
        data["authorFirstName"] = this.authorFirstName;
        data["authroLastName"] = this.authroLastName;
        return data; 
    }
}

export interface IAddBookDto {
    bookName?: string | undefined;
    authorFirstName?: string | undefined;
    authroLastName?: string | undefined;
}

export class ChangeBookAuthorDto implements IChangeBookAuthorDto {
    bookID!: string;
    authorFirstName?: string | undefined;
    authorLastName?: string | undefined;

    constructor(data?: IChangeBookAuthorDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.bookID = _data["bookID"];
            this.authorFirstName = _data["authorFirstName"];
            this.authorLastName = _data["authorLastName"];
        }
    }

    static fromJS(data: any): ChangeBookAuthorDto {
        data = typeof data === 'object' ? data : {};
        let result = new ChangeBookAuthorDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["bookID"] = this.bookID;
        data["authorFirstName"] = this.authorFirstName;
        data["authorLastName"] = this.authorLastName;
        return data; 
    }
}

export interface IChangeBookAuthorDto {
    bookID: string;
    authorFirstName?: string | undefined;
    authorLastName?: string | undefined;
}

export class LoginResultDto implements ILoginResultDto {
    hasUser!: boolean;
    accessToken?: string | undefined;
    userInfo?: UserDto | undefined;

    constructor(data?: ILoginResultDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hasUser = _data["hasUser"];
            this.accessToken = _data["accessToken"];
            this.userInfo = _data["userInfo"] ? UserDto.fromJS(_data["userInfo"]) : <any>undefined;
        }
    }

    static fromJS(data: any): LoginResultDto {
        data = typeof data === 'object' ? data : {};
        let result = new LoginResultDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hasUser"] = this.hasUser;
        data["accessToken"] = this.accessToken;
        data["userInfo"] = this.userInfo ? this.userInfo.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ILoginResultDto {
    hasUser: boolean;
    accessToken?: string | undefined;
    userInfo?: UserDto | undefined;
}

export class UserDto implements IUserDto {
    id!: string;
    name?: string | undefined;
    avatar?: string | undefined;
    age!: number;

    constructor(data?: IUserDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.avatar = _data["avatar"];
            this.age = _data["age"];
        }
    }

    static fromJS(data: any): UserDto {
        data = typeof data === 'object' ? data : {};
        let result = new UserDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["avatar"] = this.avatar;
        data["age"] = this.age;
        return data; 
    }
}

export interface IUserDto {
    id: string;
    name?: string | undefined;
    avatar?: string | undefined;
    age: number;
}

export class LoginDto implements ILoginDto {
    phone?: string | undefined;
    password?: string | undefined;
    code?: string | undefined;

    constructor(data?: ILoginDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.phone = _data["phone"];
            this.password = _data["password"];
            this.code = _data["code"];
        }
    }

    static fromJS(data: any): LoginDto {
        data = typeof data === 'object' ? data : {};
        let result = new LoginDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["phone"] = this.phone;
        data["password"] = this.password;
        data["code"] = this.code;
        return data; 
    }
}

export interface ILoginDto {
    phone?: string | undefined;
    password?: string | undefined;
    code?: string | undefined;
}

export class RegisterResultDto implements IRegisterResultDto {
    success!: boolean;
    errorMsg?: string | undefined;
    userId!: string;

    constructor(data?: IRegisterResultDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.success = _data["success"];
            this.errorMsg = _data["errorMsg"];
            this.userId = _data["userId"];
        }
    }

    static fromJS(data: any): RegisterResultDto {
        data = typeof data === 'object' ? data : {};
        let result = new RegisterResultDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["success"] = this.success;
        data["errorMsg"] = this.errorMsg;
        data["userId"] = this.userId;
        return data; 
    }
}

export interface IRegisterResultDto {
    success: boolean;
    errorMsg?: string | undefined;
    userId: string;
}

export class RegisterUserDto implements IRegisterUserDto {
    phone?: string | undefined;
    code?: string | undefined;
    password?: string | undefined;
    name?: string | undefined;
    avatar?: string | undefined;
    age!: number;

    constructor(data?: IRegisterUserDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.phone = _data["phone"];
            this.code = _data["code"];
            this.password = _data["password"];
            this.name = _data["name"];
            this.avatar = _data["avatar"];
            this.age = _data["age"];
        }
    }

    static fromJS(data: any): RegisterUserDto {
        data = typeof data === 'object' ? data : {};
        let result = new RegisterUserDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["phone"] = this.phone;
        data["code"] = this.code;
        data["password"] = this.password;
        data["name"] = this.name;
        data["avatar"] = this.avatar;
        data["age"] = this.age;
        return data; 
    }
}

export interface IRegisterUserDto {
    phone?: string | undefined;
    code?: string | undefined;
    password?: string | undefined;
    name?: string | undefined;
    avatar?: string | undefined;
    age: number;
}

export class WeChatLoginDto implements IWeChatLoginDto {
    hasUser!: boolean;
    openSessionKey?: string | undefined;
    accessToken?: string | undefined;

    constructor(data?: IWeChatLoginDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hasUser = _data["hasUser"];
            this.openSessionKey = _data["openSessionKey"];
            this.accessToken = _data["accessToken"];
        }
    }

    static fromJS(data: any): WeChatLoginDto {
        data = typeof data === 'object' ? data : {};
        let result = new WeChatLoginDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hasUser"] = this.hasUser;
        data["openSessionKey"] = this.openSessionKey;
        data["accessToken"] = this.accessToken;
        return data; 
    }
}

export interface IWeChatLoginDto {
    hasUser: boolean;
    openSessionKey?: string | undefined;
    accessToken?: string | undefined;
}

export class RegisterWeChatUserDto implements IRegisterWeChatUserDto {
    sessionKey?: string | undefined;
    name?: string | undefined;
    phone?: string | undefined;
    avatar?: string | undefined;
    age!: number;

    constructor(data?: IRegisterWeChatUserDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.sessionKey = _data["sessionKey"];
            this.name = _data["name"];
            this.phone = _data["phone"];
            this.avatar = _data["avatar"];
            this.age = _data["age"];
        }
    }

    static fromJS(data: any): RegisterWeChatUserDto {
        data = typeof data === 'object' ? data : {};
        let result = new RegisterWeChatUserDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["sessionKey"] = this.sessionKey;
        data["name"] = this.name;
        data["phone"] = this.phone;
        data["avatar"] = this.avatar;
        data["age"] = this.age;
        return data; 
    }
}

export interface IRegisterWeChatUserDto {
    sessionKey?: string | undefined;
    name?: string | undefined;
    phone?: string | undefined;
    avatar?: string | undefined;
    age: number;
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}